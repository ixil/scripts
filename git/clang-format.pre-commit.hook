#!/usr/bin/env bash
#
# Runs clang-format on changed regions before commit.
#
# To install this, copy it to .git/hooks/pre-commit in your repo.
# Remaining installation checks/instructions will be printed when you commit.
#

read -rd '' helpInstall <<- EOF
  This repository requires you to install the git clang-format command.

  One-time setup steps:
    1) install the git-clang-format script in your \$PATH, for example:

      curl https://raw.githubusercontent.com/llvm-mirror/clang/master/tools/clang-format/git-clang-format > /usr/local/bin/git-clang-format

    2) make sure git-clang-format is executable:

      chmod u+x /usr/local/bin/git-clang-format

EOF

read -rd '' help <<- EOF
Usage:
Set:

git config clangFormat.style      file
git config clangFormat.extensions extensions

EOF

check_clang_format() {
  if hash git-clang-format 2>/dev/null; then
    return
  else
    echo "SETUP ERROR: no git-clang-format executable found, or it is not executable"
    echo "$helpInstall"
    exit 1
  fi
}

check_git_config() {
[[  "$(git config --get clangformat.style)" ]] || {
    echo "Error: git config clangFormat.style is not set."
    echo "$help"
    exit 1
  }
[[ "$(git config --get clangformat.extensions)" ]] || {
  echo "Error: git config clangFormat.extensions is not set."
  echo "$help"
  exit 1
}
}

check_clang_format
check_git_config

readonly out=$(git clang-format -v --diff)

if [[ "$out" == *"no modified files to format"* ]]; then exit 0; fi
if [[ "$out" == *"clang-format did not modify any files"* ]]; then exit 0; fi

echo "ERROR: you need to run git clang-format on your commit"
exit 1
